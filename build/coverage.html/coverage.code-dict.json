{"/home/travis/build/npmtest/node-npmtest-homebridge-websocket/test.js":"/* istanbul instrument in package npmtest_homebridge_websocket */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-websocket/lib.npmtest_homebridge_websocket.js":"/* istanbul instrument in package npmtest_homebridge_websocket */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_homebridge_websocket = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_homebridge_websocket = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-websocket/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-homebridge-websocket && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_homebridge_websocket */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_homebridge_websocket\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_homebridge_websocket.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_homebridge_websocket.rollup.js'] =\n            local.assetsDict['/assets.npmtest_homebridge_websocket.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_homebridge_websocket.__dirname + '/lib.npmtest_homebridge_websocket.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-websocket/node_modules/homebridge-websocket/index.js":"'use strict';\n\nvar util = require('util');\nvar Utils = require('./lib/utils.js').Utils;\nvar WebsocketAccessory = require('./lib/accessory.js').Accessory;\nvar Websocket = require('./lib/websocket.js').Websocket;\n\nvar Accessory, Service, Characteristic, UUIDGen;\nvar cachedAccessories = 0;\n\nvar platform_name = \"websocket\";\nvar plugin_name = \"homebridge-\" + platform_name;\nvar storagePath;\n\nmodule.exports = function(homebridge) {\n  console.log(\"homebridge API version: \" + homebridge.version);\n  \n  Accessory = homebridge.platformAccessory;\n  \n  Service = homebridge.hap.Service;\n  Characteristic = homebridge.hap.Characteristic;\n  UUIDGen = homebridge.hap.uuid; // Universally Unique IDentifier\n  \n  storagePath = homebridge.user.storagePath();\n  \n  homebridge.registerPlatform(plugin_name, platform_name, WebsocketPlatform, true);\n}\n\nfunction WebsocketPlatform(log, config, api) {\n\n  this.log = log;\n  this.accessories = {};\n  this.hap_accessories = {};\n  \n  this.log.debug(\"storagePath = %s\", storagePath);\n  this.log.debug(\"config = %s\", JSON.stringify(config));\n  \n  if (typeof(config) !== \"undefined\" && config !== null) {\n    this.port = config.port || {\"port\": 4050};\n  } else {\n    this.log.error(\"config undefined or null!\");\n    this.log(\"storagePath = %s\", storagePath);\n    process.exit(1);\n  }\n     \n  var plugin_version = Utils.readPluginVersion();\n  this.log(\"%s v%s\", plugin_name, plugin_version);\n  \n  var params = {\n    \"log\": this.log,\n    \"plugin_name\": plugin_name,\n    \"port\": this.port,\n    \"accessories\": this.accessories,\n    \"Characteristic\": Characteristic,\n    \"addAccessory\": this.addAccessory.bind(this),\n    \"removeAccessory\": this.removeAccessory.bind(this),\n    \"getAccessories\": this.getAccessories.bind(this)\n  }\n  this.Websocket = new Websocket(params);\n\n  Utils.read_npmVersion(plugin_name, function(npm_version) {\n    if (npm_version > plugin_version) {\n      this.log(\"A new version %s is avaiable\", npm_version);\n    }\n  }.bind(this));\n\n  if (api) {\n    this.api = api;\n\n    this.api.on('didFinishLaunching', function() {\n      this.log(\"Plugin - DidFinishLaunching\");\n     \n     this.Websocket.startServer();\n             \n      this.log.debug(\"Number of chaced Accessories: %s\", cachedAccessories);\n      this.log(\"Number of Accessories: %s\", Object.keys(this.accessories).length);\n\n    }.bind(this));\n    //this.log.debug(\"WebsocketPlatform %s\", JSON.stringify(this.accessories));\n  }\n}\n\nWebsocketPlatform.prototype.addAccessory = function(accessoryDef) {\n\n  var name = accessoryDef.name;\n  var ack, message;\n  var isValid;\n  \n  if (!this.accessories[name]) {\n    var uuid = UUIDGen.generate(name);\n    \n    var newAccessory = new Accessory(name, uuid);\n    newAccessory.reachable = true;\n    newAccessory.context.service_name = accessoryDef.service;\n    \n    //this.log.debug(\"addAccessory UUID = %s\", newAccessory.UUID);\n    \n    var i_accessory = new WebsocketAccessory(this.buildParams(accessoryDef));\n    isValid = i_accessory.addService(newAccessory);\n    if (isValid) {\n      i_accessory.configureAccessory(newAccessory);\n      \n      this.accessories[name] = i_accessory;\n      this.hap_accessories[name] = newAccessory;\n      this.api.registerPlatformAccessories(plugin_name, platform_name, [newAccessory]);\n      \n      ack = true;\n      message =  \"accessory '\" + name + \"' is added.\";\n    } else {\n      ack = false;\n      message = \"service '\" + accessoryDef.service + \"' undefined.\";\n    }\n  } else {\n    ack = false;\n    message = \"name '\" + name + \"' is already used.\";\n  }\n  this.log(\"addAccessory %s\", message);\n  this.Websocket.sendAck(ack, message);\n}\n\nWebsocketPlatform.prototype.configureAccessory = function(accessory) {\n\n  //this.log.debug(\"configureAccessory %s\", JSON.stringify(accessory.services, null, 2));\n  \n  cachedAccessories++;\n  var name = accessory.displayName;\n  var uuid = accessory.UUID;\n    \n  var accessoryDef = {};\n  accessoryDef.name = name;\n  accessoryDef.service = accessory.context.service_name;\n  \n  if (this.accessories[name]) {\n    this.log.error(\"configureAccessory %s UUID %s already used.\", name, uuid);\n    process.exit(1);\n  }\n  \n  accessory.reachable = true;\n    \n  var i_accessory = new WebsocketAccessory(this.buildParams(accessoryDef));\n  i_accessory.configureAccessory(accessory);\n  \n  this.accessories[name] = i_accessory;\n  this.hap_accessories[name] = accessory;\n}\n\nWebsocketPlatform.prototype.removeAccessory = function(name) {\n\n  var ack, message;\n  \n  if (typeof(this.accessories[name]) !== \"undefined\") {\n    this.log.debug(\"removeAccessory '%s'\", name);\n    \n    this.api.unregisterPlatformAccessories(plugin_name, platform_name, [this.hap_accessories[name]]);\n    delete this.accessories[name];\n    delete this.hap_accessories[name];\n    ack = true;\n    message = \"accessory '\" + name + \"' is removed.\";\n  } else {\n    ack = false;\n    message = \"accessory '\" + name + \"' not found.\";\n  }\n  this.log(\"removeAccessory %s\", message);\n  this.Websocket.sendAck(ack, message);\n}\n\nWebsocketPlatform.prototype.getAccessories = function(name) {\n\n  var accessories = {};\n  var def = {};\n  var service, characteristics;\n  \n  switch (name) {\n    case \"all\":\n      for (var k in this.accessories) {\n        //this.log(\"getAccessories %s\", JSON.stringify(this.accessories[k], null, 2));\n        service = this.accessories[k].service_name;\n        characteristics =  this.accessories[k].i_value;\n        def = {\"service\": service, \"characteristics\": characteristics};\n        accessories[k] = def;\n      }\n    break;\n    \n    default:\n      service = this.accessories[name].service_name;\n      characteristics =  this.accessories[name].i_value;\n      def = {\"service\": service, \"characteristics\": characteristics};\n      accessories[name] = def;\n  }\n\n  //this.log(\"getAccessory %s\", JSON.stringify(accessories, null, 2));\n  this.Websocket.sendAccessories(accessories);\n}\n\nWebsocketPlatform.prototype.buildParams = function (accessoryDef) {\n\n  var params = {\n    \"accessoryDef\": accessoryDef,\n    \"log\": this.log,\n    \"Service\": Service,\n    \"Characteristic\": Characteristic,\n    \"Websocket\": this.Websocket\n  }\n  //this.log.debug(\"configureAccessories %s\", JSON.stringify(params.accessory_config));\n  return params;\n}\n\n","/home/travis/build/npmtest/node-npmtest-homebridge-websocket/node_modules/homebridge-websocket/lib/utils.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar request = require('request');\n\nvar plugins_name = \"plugins\";\nvar package_json = \"../package.json\";\nvar plugin_version;\nvar github_version;\nvar npm_version;\n\nmodule.exports = {\n  Utils: Utils\n}\n\nfunction Utils() {\n}\n\nUtils.loadConfig = function(storage_path, plugin_name, config_name) {\n  \n  var plugin_storage_path = path.join(storage_path, plugins_name, plugin_name);\n  var config_path = path.join(plugin_storage_path, config_name);\n  \n  // Complain and exit if config_name doesn't exist yet\n  if (!fs.existsSync(config_path)) {\n      console.log(\"Couldn't find a %s file at %s.\", config_name, plugin_storage_path);\n      process.exit(1);\n  }\n  \n  // Load up the configuration file\n  var config;\n  try {\n    //console.log(\"Utils.loadConfig\");\n    config = JSON.parse(fs.readFileSync(config_path));\n  }\n  catch (err) {\n    console.log(\"There was a problem reading your %s file.\", config_name);\n    console.log(\"Please try pasting your %s file here to validate it: http://jsonlint.com\", config_name);\n    console.log(\"\");\n    throw err;\n  }\n  return config;\n}\n\nUtils.saveConfig = function(storage_path, plugin_name, config_name, data) {\n\n  var plugin_storage_path = path.join(storage_path, plugins_name, plugin_name);\n  var config_path = path.join(plugin_storage_path, config_name); // \"config_test.json\");\n\n  try {\n    //console.log(\"Utils.saveConfig %s\", data);\n    fs.writeFileSync(config_path, JSON.stringify(data, null, 2));\n  }\n  catch (err) {\n    console.log(\"There was a problem writing your %s file.\", config_name);\n    throw err;\n  }\n}\n\nUtils.getPluginVersion = function() {\n  return plugin_version;\n}\n\nUtils.get_npmVersion = function(pkg) {\n  // Update version for the next call\n  this.read_npmVersion(pkg, function(version) {\n    npm_version = version;\n  });\n  return npm_version;\n}\n\nUtils.n2b = function (number) {\n  return (number == 0 || number == false) ? false : true;\n}\n\nUtils.getGitHubVersion = function(pkg, github_url) {\n  this.read_GitHubVersion(pkg, github_url);\n  return github_version;\n}\n\nUtils.readPluginVersion = function() {\n  \n  var packageJSONPath = path.join(__dirname, package_json);\n  var packageJSON = JSON.parse(fs.readFileSync(packageJSONPath));\n  plugin_version = packageJSON.version;\n  return plugin_version;\n}\n\nUtils.read_npmVersion = function(pck, callback) {\n  var exec = require('child_process').exec;\n  var cmd = 'npm view '+pck+' version';\n  exec(cmd, function(error, stdout, stderr) {\n    npm_version = stdout.trim();\n    //npm_version = stdout.replace(/(\\r\\n|\\n|\\r)/gm,\"\");\n    callback(npm_version);\n    //console.log(\"npm_version %s\", npm_version);\n });\n}\n\nUtils.readGitHubVersion = function (pkg, url) {\n  \n  request.get({url: url}, function(err, response, body) {\n    \n    if (!err && response.statusCode == 200) {\n      var package_json = body.trim();\n      //console.log(\"package.json %s\", JSON.stringify(package));\n      var packageJSON = JSON.parse(package_json);\n      github_version = packageJSON.version;\n      if (github_version > plugin_version) {\n        console.log(\"%s a new version %s is avaiable\", pkg, github_version);\n      }\n    }\n    else {\n      console.log(err);\n      if (response) console.log(\"statusCode: %s Message: %s\", response.statusCode, response.statusMessage);\n    }\n  });\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from https://en.wikipedia.org/wiki/HSL_and_HSV\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns rgb (FFFFFF)\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value (brigthness)\n * @return  HexNumber       The RGB representation\n */\n \nUtils.hsv2rgb = function (h, s, v) {\n\n  //console.log(\"h: %s s: %s v: %s\", h, s, v);\n  var r, g, b;\n  \n  if( s == 0 ) {\n    r = v; g = v; b = v;\n  }\n  else {\n    var i = Math.floor(h * 6);\n    var f = h * 6 - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n\n    switch(i % 6){\n      case 0: r = v; g = t; b = p; break;\n      case 1: r = q; g = v; b = p; break;\n      case 2: r = p; g = v; b = t; break;\n      case 3: r = p; g = q; b = v; break;\n      case 4: r = t; g = p; b = v; break;\n      case 5: r = v; g = p; b = q; break;\n    }\n  }\n  r = Math.round(r*255);\n  g = Math.round(g*255);\n  b = Math.round(b*255);\n  //console.log(\"r: %s g: %s b: %s\", r, g, b);\n  return Number(0x1000000 + r*0x10000 + g*0x100 + b).toString(16).substring(1).toUpperCase();\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from https://en.wikipedia.org/wiki/HSL_and_HSV\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\n \nUtils.rgb2hsv = function(r, g, b) {\n\n  r = r/255, g = g/255, b = b/255;\n  var max = Math.max(r, g, b), min = Math.min(r, g, b);\n  var h, s, v = max;\n\n  var d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if(max == min){\n      h = 0; // achromatic\n  } else {\n      switch(max){\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n      }\n      h /= 6;\n  }\n\n  return [h, s, v];\n}","/home/travis/build/npmtest/node-npmtest-homebridge-websocket/node_modules/homebridge-websocket/lib/accessory.js":"'use strict';\n\nvar Utils = require('./utils.js').Utils;\nvar Service, Characteristic, Websocket;\n\nNumber.prototype.pad = function (len) {\n    return (new Array(len+1).join(\"0\") + this).slice(-len);\n}\n\nmodule.exports = {\n  Accessory: Accessory\n}\n\nfunction Accessory(params) {\n     \n  this.accessoryDef = params.accessoryDef;\n  this.log = params.log;\n  Service = params.Service;\n  Characteristic = params.Characteristic;\n  Websocket = params.Websocket;\n  \n  this.name = this.accessoryDef.name;\n  this.service_name = this.accessoryDef.service;\n  \n  this.i_value = {};  \n  this.i_label = {};\n  this.i_props = {};\n  \n  this.service;\n}\n\nAccessory.prototype.save_and_setValue = function (trigger, c, value) {\n\n  //this.log.debug(\"Accessory.save_and_setValue %s %s %s\", trigger, c, value);\n  \n  var result = {};\n  \n  result = this.parseValue(c, value);\n\n  if (result.isValid) {\n    this.i_value[c] = result.value;\n    this.setLabel(trigger, c);\n  \n    var context = this.i_label[c];\n    //context is also used by the hap-server ('get' and 'set' event) - \"context\": {\"keepalive\":true, ...\n    //this.log.debug(\"Accessory.save_and_setValue %s %s %s %s %s \", trigger, this.name, c, result.value, JSON.stringify(context));\n\n    if (typeof(context) !== \"undefined\") {\n      this.service.getCharacteristic(Characteristic[c]).setValue(result.value, null, context);\n    }\n    else {\n      this.service.getCharacteristic(Characteristic[c]).setValue(result.value);\n    }\n  }\n}\n\nAccessory.prototype.saveValue = function (c, value) {\n\n  var result = {};\n  \n  result = this.parseValue(c, value);\n  \n  if (result.isValid) {\n    this.i_value[c] = result.value;\n  }\n}\n\nAccessory.prototype.parseValue = function(c, value) {\n\n  var isValid = true;\n  \n  var sc = this.service.getCharacteristic(Characteristic[c]);\n   \n  switch (sc.props.format) {\n    case \"bool\":\n      value = (value == 0 || value == false) ? false : true;\n      break;\n      \n    case \"int\":\n    case \"uint8\":\n    case \"uint16\":\n    case \"unit32\":\n      value = parseInt(value);\n      if (value < sc.props.minValue || value > sc.props.maxalue) {\n        this.log.error(\"Accessory.parse %s %s value '%s' outside range.\", this.name, c, value);\n        isValid = false;\n      }\n      break;\n      \n    case \"float\":\n      value = parseFloat(value);\n      if (value < sc.props.minValue || value > sc.props.maxalue) {\n        this.log.error(\"Accessory.parse %s %s value '%s' outside range.\", this.name, c, value);\n        isValid = false\n      }\n      break;\n      \n    default:\n      // string, tlv8, \n      value = undefined;\n      this.log.warn(\"Accessory.parseValue %s %s %s %s\", name, c, value, JSON.stringify(sc.props));\n  }\n  return {isValid: isValid, value: value};\n}\n\nAccessory.prototype.setLabel = function(trigger, c) {\n\n  var now = new Date();\n  var timestamp = now.getHours().pad(2)+\":\"+now.getMinutes().pad(2)+\":\"+now.getSeconds().pad(2);\n   // +\",\"+now.getMilliseconds(); \n  \n  this.i_label[c] = {\n    \"timestamp\": timestamp,\n    \"trigger\": trigger\n  };\n}\n\nAccessory.prototype.addService = function(newAccessory) {\n\n  var isValid;\n\n  if (typeof(Service[this.service_name]) !== \"undefined\") {\n    var service = newAccessory.addService(Service[this.service_name], this.name);\n    isValid = true;\n    //this.log.debug(\"Accessory.addService %s\", JSON.stringify(service, null, 2));\n    \n  } else {\n    //this.log.debug(\"Accessory.addService service '%s' undefined.\", this.service_name);\n    isValid = false;\n  }\n  return isValid;\n}\n\nAccessory.prototype.configureAccessory = function(accessory) {\n   \n  accessory.on('identify', function(paired, callback) {this.identify(paired, callback)}.bind(this));\n  \n  //this.service = accessory.getService(Service[this.service_name]);\n  this.service = accessory.getService(this.name);\n    \n  //this.log.debug(\"Accessory.configureAccessory %s %s %s\\n\", this.name, this.service_name, JSON.stringify(this.service.characteristics));\n\n  this.log.debug(\"Accessory.configureAccessory Def %s\", JSON.stringify(this.accessoryDef));\n  \n  var c;\n  for (var k in this.service.characteristics) {\n  \n    c = this.service.characteristics[k].displayName.replace(/\\s/g, \"\");\n    //this.log.debug(\"Accessory.configureAccessory %s %s %s\", this.name, this.service_name, c);\n    \n    if (c != \"Name\") {\n      this.allocate(c);\n      this.setProps(c);\n      this.i_value[c] = \"blank\";\n      this.i_props[c] = JSON.parse(JSON.stringify(this.service.getCharacteristic(Characteristic[c]).props));\n      //this.log.debug(\"Accessory.configureAccessory %s %s %s %s\", this.name, this.service_name, c, JSON.stringify(this.i_props));\n    }\n  }\n  \n  // note: if the accessories are restored from cachedAccessories, the optionalCharacteristics are stored in characteristics.\n  for (var k in this.service.optionalCharacteristics) {\n    \n    c = this.service.optionalCharacteristics[k].displayName.replace(/\\s/g, \"\");\n      \n    if (typeof(this.accessoryDef[c]) !== \"undefined\") {\n      this.log.debug(\"Accessory.configureAccessory %s %s optional %s\", this.name, this.service_name, c);\n      \n      if (c != \"Name\") {\n        this.allocate(c);\n        this.setProps(c);\n        this.i_value[c] = \"blank\";\n        this.i_props[c] = JSON.parse(JSON.stringify(this.service.getCharacteristic(Characteristic[c]).props));\n      }\n    }\n  }\n}\n\nAccessory.prototype.allocate = function(c) {\n\n  var self = this;\n  var sc = this.service.getCharacteristic(Characteristic[c]);\n  \n  sc.on('get', function(callback, context) {self.get(callback, context, this.displayName)});\n  if (sc.props.perms.indexOf(\"pw\") > -1) { \n    //this.log.debug(\"Accessory.allocate 'set' event %s %s\", this.name, c);\n    sc.on('set', function(value, callback, context) {self.set(value, callback, context, this.displayName)});\n  }\n}\n\nAccessory.prototype.setProps = function(c) {\n\n  if (typeof(this.accessoryDef[c]) !== \"undefined\") {\n    if (this.accessoryDef[c] != \"default\") {\n      this.service.getCharacteristic(Characteristic[c]).setProps(this.accessoryDef[c]);\n    }\n    //this.log.debug(\"Accessory.setProps %s %s\", this.name, c, this.accessoryDef[c]);\n    //this.log.debug(\"Accessory.setProps %s %s\", this.name, c, Characteristic[c]);\n  }\n}\n\nAccessory.prototype.get = function(callback, context, displayName) {\n  \n  var c = displayName.replace(/\\s/g, \"\");\n  //this.log.debug(\"Accessory.get %s %s\", this.name, c);\n  \n  Websocket.get(this.name, c, callback);\n  \n  var value;\n  if (typeof(this.i_value[c]) !== \"undefined\" && this.i_value[c] !== \"blank\") {\n    value = this.i_value[c];\n  } else {\n    value = null;\n  }\n  this.log.debug(\"Accessory.get %s %s %s\", this.name, c, value);\n  callback(null, value);\n}\n\nAccessory.prototype.set = function(value, callback, context, displayName) {\n\n  var c = displayName.replace(/\\s/g, \"\");\n  //this.log.debug(\"Accessory.set %s %s %s %s\", this.name, c, value, JSON.stringify(context));\n  \n  if (c == \"On\") value = (value == 0 || value == false) ? false : true;\n  this.i_value[c] = value;\n  \n  if (typeof(context) !== \"undefined\" && typeof(context.trigger) === \"undefined\") {\n    this.setLabel(\"homekit\", c);\n  }\n\n  if (typeof(context) !== \"undefined\" && typeof(context.trigger) !== \"undefined\" && context.trigger.match(/websocket/g)) {\n    //this.log.debug(\"Accessory.set %s %s %s - websocket\", this.name, c, value);\n    callback();\n  } else {\n   Websocket.set(this.name, c, value, callback);\n  }\n}\n\nAccessory.prototype.identify = function (paired, callback) {\n\n  this.log(\"Accessory.identify %s\", this.name);\n  // todo\n  callback();\n}\n\n","/home/travis/build/npmtest/node-npmtest-homebridge-websocket/node_modules/homebridge-websocket/lib/websocket.js":"'use strict';\n\nvar util = require('util');\nvar path = require('path');\nvar Utils = require('./utils.js').Utils;\nvar port, plugin_name, accessories, Characteristic, addAccessory, removeAccessory, getAccessories;\nvar latest, get_timeout, set_timeout, pre_name, pre_c;\n\nvar WebSocketServer = require('ws').Server,\n  http = require('http'),\n  express = require('express'),\n  app = express();\n  \nmodule.exports = {\n  Websocket: Websocket\n}\n\nfunction Websocket(params) {\n\n  this.log = params.log;\n  port = params.port;\n  plugin_name = params.plugin_name;\n  accessories = params.accessories;\n  Characteristic = params.Characteristic;\n  addAccessory = params.addAccessory;\n  removeAccessory = params.removeAccessory;\n  getAccessories = params.getAccessories;\n    \n  this.ws;\n}\n\nWebsocket.prototype.startServer = function() {\n\n  var server = http.createServer(app);\n  server.listen(port, function() {\n    this.log(\"url %j\", server.address());\n  }.bind(this));\n  \n  var wsServer = new WebSocketServer({server: server});\n  \n  wsServer.on('connection', function(ws) {\n  \n    this.ws = ws;\n    \n    this.ws.on('open', function open() {  // no event ?\n      this.log.debug(\"on.open\");  \n    }.bind(this));\n    \n    this.ws.on('message', function message(data) {\n      //this.log.debug(\"on.message: %s\", data);\n      this.onMessage(data);\n    }.bind(this));\n    \n    this.ws.on('close', function close() {\n      this.log(\"on.close client ip %s disconnected\", ws.upgradeReq.connection.remoteAddress);\n    }.bind(this));\n    \n    this.ws.on('error', function error(e) {\n      this.log.error(\"on.error %s\", e.message);  \n    }.bind(this))\n    \n    set_timeout = setTimeout(function() {\n      this.log(\"client ip %s connected\", ws.upgradeReq.connection.remoteAddress);\n    }.bind(this), 500);\n          \n  }.bind(this));\n}\n\nWebsocket.prototype.onMessage = function(data) {\n\n  var msg = JSON.parse(data);\n  var topic = msg.topic;\n  var accessory = msg.payload;\n  var result = {};\n  \n  switch (topic) {\n    case \"add\":\n    case \"addAccessory\":\n      this.log.debug(\"onMessage add %s\", JSON.stringify(accessory, null, 2));\n      addAccessory(accessory);\n      break;\n    \n    case \"remove\":\n    case \"removeAccessory\":\n      removeAccessory(accessory.name);\n      break;\n    \n    case \"set\":\n    case \"setValue\":\n      //this.log.debug(\"onMessage setValue %s\", JSON.stringify(accessory));\n      this.log.debug(\"setValue %s\", JSON.stringify(accessory));\n      result = this.validate(accessory);\n      \n      if (result.isValid) {\n        accessories[accessory.name].save_and_setValue(\"websocket\", accessory.characteristic, result.value);\n      } else {\n        this.log.warn(\"setValue %s\", result.message);\n        this.sendAck(false, result.message);\n      }\n      break;\n    \n    case \"callback\":\n      this.log.debug(\"callback %s\", JSON.stringify(accessory));\n      \n        result = this.validate(accessory);\n        \n        if (result.isValid) {\n          accessories[accessory.name].saveValue(accessory.characteristic, result.value);\n        } else {\n          this.log.error(\"onMessage %s\", result.message);\n          this.sendAck(false, result.message);\n        }        \n      break;\n      \n    case \"getAccessories\":\n    case \"getAccessory\":\n    case \"get\":\n      var name;\n      this.log.debug(\"onMessage get %s\", JSON.stringify(accessory));\n      \n      if (typeof(accessory.name) !== \"undefined\") {\n        name = accessory.name;\n      } else {\n        name = \"all\";\n      }\n      \n      if (typeof(accessories[name]) !== \"undefined\" || name === \"all\") {\n        getAccessories(name);\n      } else {\n        var message = \"name '\" + name + \"' undefined.\";\n        this.log.warn(\"onMessage.get %s\", message);\n        this.sendAck(false, message);\n      }\n      break;\n    \n    default:\n      var message = \"topic '\" + topic + \"' unkown.\";\n      this.log.warn(\"onMessage topic %s\", message);\n      this.sendAck(false, message);\n  }\n}\n\nWebsocket.prototype.validate = function(accessory) {\n\n  var name = accessory.name;\n  var c = accessory.characteristic;\n  var value = accessory.value;\n  \n  var isValid = false;\n  var message = \"\";\n  \n  if(typeof(accessories[name]) === \"undefined\") {\n    message = \"name '\" + name + \"' undefined.\";\n  } else if (typeof(Characteristic[c]) !== \"function\") {\n      message = \"characteristic '\" + c + \"' undefined.\";\n  } else if (typeof(accessory.value) === \"undefined\" || accessory.value === null) {\n      message = \"name '\" + name + \"' value undefined.\";\n  } else if (typeof(accessories[name].service.getCharacteristic(Characteristic[c])) === \"undefined\"){\n    message = \"name '\" + name + \"' characteristic do not match.\";\n  } else {\n    var result = {};\n    result = accessories[name].parseValue(c, value);\n    isValid = result.isValid;\n    value = result.value;\n    if (!isValid) {\n      message = \"value '\" + value + \"' outside range\";\n    } else {\n      message = \"name '\" + name + \"' is valid.\";\n    }\n  }\n  \n  return {isValid: isValid, message: message, value: value};\n}\n\nWebsocket.prototype.get = function(name, c, callback) {\n  // callback not used\n  \n  // this.log.debug(\"get %s %s\", name, c);\n  \n  if (typeof(this.ws) !== \"undefined\" && this.ws.OPEN) {\n    var data = {\"topic\": \"get\", \"payload\": {\"name\": name, \"characteristic\": c}};\n    this.sendData(data);\n  } else {\n    this.log.debug(\"get client disconnected.\");\n  }\n}\n\nWebsocket.prototype.set = function(name, c, value, callback) {\n \n  if (typeof(this.ws) !== \"undefined\" && this.ws.OPEN) {       \n\n    if (c === \"On\") {\n      value = (value == 0 || value == false) ? false : true;\n    }\n    \n    var data = {\"topic\": \"set\", \"payload\": {\"name\": name, \"characteristic\": c, \"value\": value}};\n    \n    switch (c) {\n      case \"Brightness\":\n      case \"TargetPosition\":\n      case \"TargetHorizontalTiltAngle\":\n      case \"TargetVerticalTiltAngle\":\n      case \"TargetRelativeHumidity\":\n      case \"TargetTemperature\":\n        if (set_timeout && name === pre_name && c === pre_c) {\n          clearTimeout(set_timeout);\n        }\n        set_timeout = setTimeout(function() {\n          this.log.debug(\"set %s %s %s\", name, c, value);\n          this.sendData(data);\n        }.bind(this), 300);\n        pre_name = name;\n        pre_c = c;\n        break;\n        \n      default:\n        this.log.debug(\"set %s %s %s\", name, c, value);\n        this.sendData(data);\n    }\n    callback(); // todo error handling\n  } else {\n    this.log.debug(\"get client disconnected.\");\n    callback(\"disconnected\");\n  }\n}\n\nWebsocket.prototype.sendAccessories = function (accessories) {\n\n  if (typeof(this.ws) !== \"undefined\" && this.ws.OPEN) {\n    var data = {\"topic\": \"accessories\", \"payload\": accessories};\n    this.sendData(data);\n  } else {\n    this.log.error(\"sendAck client disconnected.\");\n  }\n}\n\nWebsocket.prototype.sendAck = function (ack, message) {\n\n  if (typeof(this.ws) !== \"undefined\" && this.ws.OPEN) {\n    var data = {\"topic\":\"response\", \"payload\": {\"ack\": ack, \"message\": message}}; \n    this.sendData(data);\n  } else {\n    this.log.error(\"sendAck client disconnected.\");\n  }\n}\n\nWebsocket.prototype.sendData = function(data) {\n\n  if (typeof(this.ws) !== \"undefined\" && this.ws.OPEN) {\n    var j_data = JSON.stringify(data);\n    \n    this.log.debug(\"sendData %s\", JSON.stringify(data)); // JSON.stringify(data, null, 2));\n    \n    this.ws.send(j_data, function ack(error) {\n      if (error) this.log(\"sendData %s\", error);\n    }.bind(this));\n  }\n}\n"}